@use 'sass:color';
@use 'sass:map';
@use 'constants' as c;
@use 'icons';

$borgar-width: 3rem;
$borgar-height: 2.5rem;
//$borgar-bg: color.mix(c.$bg, c.$fg, 70%);
$borgar-bg: c.$off-bg;

$sidebar-width: 12rem;
$shade: color.adjust(c.$bg, $alpha: -0.45);
$transition: 0.15s ease-in-out;
$always-display-breakpoint: 80rem;

$top-width: 3rem;
$top-padding: 1rem;

/* Site nav, across top */

main {
	position: fixed;
	top: $top-width;
	bottom: 0;
	right: 0;
	overflow-x: hidden;

	~ nav {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		height: $top-width;
		background-color: c.$off-bg-tint;
		ul {
			display: flex;
			flex-direction: row;
			box-sizing: border-box;
			> li {
				padding: $top-padding;

				a, label {
					font: inherit;
					color: inherit;
					display: block;
					height: 100%;
					padding: $top-padding;
					margin: -$top-padding;
					&:hover {
						background-color: c.$off-bg-tint;
					}
				}
				img {
					height: $top-width - $top-padding;
					margin: -$top-padding/2;
				}
			}
		}
	}
}

/* Article nav, along side */

article {
	section:first-of-type > h1:first-of-type {
		margin-right: $borgar-width;
	}
}

.borgar-icon {
	width: $borgar-width;
	height: $borgar-height;
	background-color: $borgar-bg;
	border-radius: 0 0 0 0.5rem;
	content: url(icons.$prefix + map.get(icons.$map, 'borgar'));
}

/*

main {
margin-left: $borgar-width;
@media (min-width: $always-display-breakpoint) {
margin-left: $sidebar-width;
}
}

article > nav {
display: none;
input[type=checkbox] {
display: none;
transition: $transition;

~ {

label {
	position: fixed;
	top: 0;
	left: 0;
	width: $borgar-width;
	transition: $transition;
	transition-property: padding-left;
	@media (min-width: $always-display-breakpoint) {
		display: none;
	}
}

ul {
	background-color: c.$off-bg;
	display: block;
	position: fixed;
	transition: $transition;
	transition-property: left;
	top: 0;
	height: 100vh;
	width: 100vw;
	left: -100vw;
	@media (min-width: $sidebar-width) {
		width: $sidebar-width;
		left: -$sidebar-width;
	}
	@media (min-width: $always-display-breakpoint) {
		left: 0;
	}

	> li {
		box-sizing: border-box;
		height: 2rem;
		padding: 0.5rem;
		text-align: end;
		cursor: pointer;
		user-select: none;

		&:hover {
			background-color: c.$off-bg-tint;
		}
	}
}
		}

		&:checked ~ {
			label[for=nav-open] {
				width: 100vw;
				height: 100vh;
				background-color: $shade;
				padding-left: $sidebar-width;
			}

			ul {
				left: 0;
			}
		}
	}

	#nav-menu-icon {
		width: $borgar-width;
		height: $borgar-height;
		background-color: $borgar-bg;
		border-radius: 0 0 0.5rem 0;
		content: url(icons.$prefix + map.get(icons.$map, 'borgar'));
	}
}

*/
